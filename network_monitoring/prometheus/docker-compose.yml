version: '3.5'
services:
  prometheus:
    image: prom/prometheus:v2.28.0
    container_name: prometheus
    restart: always
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
      - --storage.tsdb.retention.size=5GB
      - --storage.tsdb.retention.time=90d
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./targets.json:/etc/prometheus/targets.json:ro
      - ./alerts.yml:/etc/prometheus/alerts.yml:ro
      - ./rules.yml:/etc/prometheus/rules.yml:ro
    networks:
      - monitoring
    ports:
      - "9090:9090"
  snmp-exporter:
    image: prom/snmp-exporter:v0.20.0
    container_name: snmp-exporter
    restart: always
    networks:
      - monitoring
    # volumes:
    #   - ./snmp.yml:/etc/snmp_exporter/snmp.yml:ro
    ports:
    - "9116:9116"
  alertmanager:
    image: prom/alertmanager:v0.22.2
    container_name: alertmanager
    restart: always
    networks:
      - monitoring
    ports:
    - "9093:9093"
  karma:
    image: lmierzwa/karma:v0.86
    container_name: karma
    restart: always
    environment:
      - ALERTMANAGER_URI=http://alertmanager:9093
    networks:
      - monitoring
    ports:
    - "8080:8080"
  grafana:
    image: grafana/grafana:8.0.3
    container_name: grafana
    restart: always
    depends_on:
       - prometheus
    networks:
      - monitoring
    ports:
      - "3000:3000"

networks:
  monitoring:
    name: monitoring
